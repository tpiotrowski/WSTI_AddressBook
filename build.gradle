/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'base'
    
}

apply plugin: 'eclipse'

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'
    
    implementation 'com.google.code.gson:gson:2.+'

	compile 'commons-io:commons-io:2.+'
    // Use JUnit test framework
    //testImplementation 'junit:junit:5.+'
    
    //testCompile("junit:junit:4.12")
    //testRuntime("org.junit.vintage:junit-vintage-engine:5.3.2")
    
    testCompile("org.junit.jupiter:junit-jupiter-api:5.3.2")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.3.2")
    
    testImplementation 'org.mockito:mockito-core:2.+'
    
    compile group: 'com.miglayout', name: 'miglayout-swing', version: '5.0'
    
    
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()

}
